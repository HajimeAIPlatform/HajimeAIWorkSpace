load("@py_deps//:requirements.bzl", "requirement")
load("@rules_pkg//pkg:mappings.bzl", "pkg_filegroup", "pkg_files", "strip_prefix")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_python//python:defs.bzl", "py_binary", "py_library")

exports_files(
    [".env"],
    visibility = ["//visibility:public"],
)

exports_files(
    [".env.example"],
    visibility = ["//visibility:public"],
)

py_library(
    name = "common_deps",
    srcs = [],
    visibility = ["//visibility:public"],
    deps = [
        requirement("asgiref"),
        requirement("flask"),
        requirement("nest-asyncio"),
        requirement("python-dotenv"),
        requirement("uvicorn"),
        requirement("psycopg2-binary"),
        requirement("gunicorn"),
    ],
)

py_binary(
    name = "wsgi",
    srcs = glob([
        "wsgi.py",
        "app.py",
    ]),
    data = [".env"],
    main = "wsgi.py",
    deps = [
        "//pythonp/apps/tokenfate:common_deps",
        "//pythonp/apps/tokenfate/models",
        "//pythonp/apps/tokenfate/src",
        "//pythonp/common/logging:logger",
        "//pythonp/common/email_notifications:email_notifications",
    ],
)

# build
pkg_files(
    name = "static_assets",
    srcs = [
        "//pythonp/apps/tokenfate/static:assets",
    ],
    prefix = "static/assets",
)

pkg_files(
    name = "static_images",
    srcs = [
        "//pythonp/apps/tokenfate/static:images",
    ],
    prefix = "static/images",
)

pkg_tar(
    name = "tokenfate_tar",
    srcs = [
        ".env",
        ":static_assets",
        ":static_images",
        ":wsgi",
    ],  #
    extension = "tar.gz",
    include_runfiles = True,
    package_dir = "TokenFate",
)
