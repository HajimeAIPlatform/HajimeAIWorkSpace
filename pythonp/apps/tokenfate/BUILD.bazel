load("@py_deps//:requirements.bzl", "requirement")

py_library(
    name = "models",
    srcs = glob(["models/**/*.py"]),
    deps = [
        "//pythonp/apps/tokenfate:common_deps",
    ],
)

py_library(
    name = "logger",
    srcs = glob(["logger/**/*.py"]),
    deps = [
        "//pythonp/apps/tokenfate:common_deps",
    ],
)

py_library(
    name = "diffy_client",
    srcs = glob(["diffy_client/**/*.py"]),
    deps = [
        "//pythonp/apps/tokenfate:common_deps",
    ],
)

py_library(
    name = "src",
    srcs = glob(["src/**/*.py"]),
    deps = [
        ":diffy_client",
        "//pythonp/apps/tokenfate:common_deps",
    ],
)

py_library(
    name = "mock_service",
    srcs = glob(["mock_service/**/*.py"]),
    deps = [
        "//pythonp/apps/tokenfate:common_deps",
    ],
)

py_binary(
    name = "wsgi",
    srcs = glob(["**/*.py"]),
    main = "wsgi.py",
    deps = [
        ":diffy_client",
        ":logger",
        ":mock_service",
        ":models",
        ":src",
        "//pythonp/apps/tokenfate:common_deps",
    ],
)

py_library(
    name = "common_deps",
    srcs = [],
    deps = [
        requirement("asgiref"),
        requirement("flask"),
        requirement("nest-asyncio"),
        requirement("python-dotenv"),
        requirement("uvicorn"),
        requirement("md2tgmd"),
        requirement("python-telegram-bot"),
        requirement("Pillow"),
        requirement("httpx-sse"),
        requirement("pydantic"),
        requirement("schedule"),
        requirement("python-binance"),
    ],
)
